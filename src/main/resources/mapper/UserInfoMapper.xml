<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhc.blogs.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.hhc.blogs.domain.UserInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="self_intro" jdbcType="VARCHAR" property="selfIntro" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hhc.blogs.domain.UserInfo">
    <result column="circles" jdbcType="LONGVARCHAR" property="circles" />
    <result column="managed_circles" jdbcType="LONGVARCHAR" property="managedCircles" />
    <result column="tags" jdbcType="LONGVARCHAR" property="tags" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, self_intro, age, gender, `status`
  </sql>
  <sql id="Blob_Column_List">
    circles, managed_circles, tags
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hhc.blogs.domain.UserInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hhc.blogs.domain.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hhc.blogs.domain.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hhc.blogs.domain.UserInfo">
    insert into user_info (id, self_intro, age, 
      gender, `status`, circles, 
      managed_circles, tags)
    values (#{id,jdbcType=BIGINT}, #{selfIntro,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{gender,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{circles,jdbcType=LONGVARCHAR}, 
      #{managedCircles,jdbcType=LONGVARCHAR}, #{tags,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hhc.blogs.domain.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="selfIntro != null">
        self_intro,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="circles != null">
        circles,
      </if>
      <if test="managedCircles != null">
        managed_circles,
      </if>
      <if test="tags != null">
        tags,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="selfIntro != null">
        #{selfIntro,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="circles != null">
        #{circles,jdbcType=LONGVARCHAR},
      </if>
      <if test="managedCircles != null">
        #{managedCircles,jdbcType=LONGVARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hhc.blogs.domain.UserInfoExample" resultType="java.lang.Long">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.selfIntro != null">
        self_intro = #{record.selfIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.circles != null">
        circles = #{record.circles,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.managedCircles != null">
        managed_circles = #{record.managedCircles,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user_info
    set id = #{record.id,jdbcType=BIGINT},
      self_intro = #{record.selfIntro,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=BIT},
      circles = #{record.circles,jdbcType=LONGVARCHAR},
      managed_circles = #{record.managedCircles,jdbcType=LONGVARCHAR},
      tags = #{record.tags,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set id = #{record.id,jdbcType=BIGINT},
      self_intro = #{record.selfIntro,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hhc.blogs.domain.UserInfo">
    update user_info
    <set>
      <if test="selfIntro != null">
        self_intro = #{selfIntro,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BIT},
      </if>
      <if test="circles != null">
        circles = #{circles,jdbcType=LONGVARCHAR},
      </if>
      <if test="managedCircles != null">
        managed_circles = #{managedCircles,jdbcType=LONGVARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hhc.blogs.domain.UserInfo">
    update user_info
    set self_intro = #{selfIntro,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=BIT},
      circles = #{circles,jdbcType=LONGVARCHAR},
      managed_circles = #{managedCircles,jdbcType=LONGVARCHAR},
      tags = #{tags,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hhc.blogs.domain.UserInfo">
    update user_info
    set self_intro = #{selfIntro,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>