<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhc.blogs.mapper.BlogSnapshotMapperCust">

    <!--
    # 方案(生成id连续的快照表)：
    # 1.如果快照表里还没有，则为所有的博客生成一条今天的快照记录：blog表里面的id值已经在blog_snapshot表中有值了，则不需要将其查出来
    # 2.更新阅读总数，点赞总数
    # 3.更新今日阅读数，今日点赞数
    # 若字段是关键字，则需要添加反引号
    # 不存在的写法：select 1后面where一个条件，若条件满足，则会查到1
    # left join表示更新左边的blog_snapshot表，不管右边的表是否存在，如果有根据下面的条件更新，如果没有就把t2.view_count和t2.vote_count变成0
    # left join与on匹配起来，用来将两张表关联起来
    -->

    <update id="genSnapshot">
        insert into blog_snapshot(blog_id, `date`, vote_num, comment_num, vote_increase, comment_increase)
        select t1.id, curdate(), 0, 0, 0, 0
        from blog t1
        where not exists(select 1
                         from blog_snapshot t2
                         where t1.id = t2.blog_id
                           and t2.`date` = curdate());

        update blog_snapshot t1, blog t2
        set t1.vote_num = t2.vote_num,
            t1.comment_num = t2.comment_num
        where t1.`date` = curdate()
        and t1.blog_id = t2.id;

        update blog_snapshot t1 left join (select blog_id, vote_num, comment_num
                                            from blog_snapshot
                                            where `date` = date_sub(curdate(), interval 1 day)) t2
            on t1.blog_id = t2.blog_id
        set t1.vote_increase = t1.vote_num - ifnull(t2.vote_num, 0),
            t1.comment_increase = t1.comment_num - ifnull(t2.comment_num, 0)
        where `date` = curdate();
    </update>

    <!-- 获取首页数值数据：总点赞数、总评论数、今日点赞数、今日评论数、今日预计点赞增长、今日预计评论增长 -->
    <select id="getStatistic" resultType="com.hhc.blogs.resp.StatisticResp">
        select
            t1.`date` as `date`,
            sum(t1.vote_num) as voteNum,
            sum(t1.comment_num) as commentNum,
            sum(t1.vote_increase) as voteIncrease,
            sum(t1.comment_increase) as commentIncrease
        from
            blog_snapshot t1
        where
            t1.`date` >= date_sub(curdate(), interval 1 day)
        group by
            t1.`date`
        order by
            t1.`date` asc;
    </select>

</mapper>
